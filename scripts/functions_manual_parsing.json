{
    "TA_ACOS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ACOS( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ACOS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ACOS( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ACOS_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ACOS_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_AD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "const double inVolume[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_AD( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], const double inVolume[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_AD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "const float inVolume[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_AD( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], const float inVolume[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_AD_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_AD_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_ADD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal0[]",
            "const double inReal1[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ADD( int startIdx, int endIdx, const double inReal0[], const double inReal1[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ADD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal0[]",
            "const float inReal1[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ADD( int startIdx, int endIdx, const float inReal0[], const float inReal1[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ADD_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ADD_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_ADOSC": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "const double inVolume[]",
            "int optInFastPeriod",
            "int optInSlowPeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ADOSC( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], const double inVolume[], int optInFastPeriod, int optInSlowPeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ADOSC": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "const float inVolume[]",
            "int optInFastPeriod",
            "int optInSlowPeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ADOSC( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], const float inVolume[], int optInFastPeriod, int optInSlowPeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ADOSC_Lookback": {
        "args": [
            "int optInFastPeriod",
            "int optInSlowPeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ADOSC_Lookback( int optInFastPeriod, int optInSlowPeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_ADX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ADX( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ADX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ADX( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ADX_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ADX_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_ADXR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ADXR( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ADXR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ADXR( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ADXR_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ADXR_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_APO": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInFastPeriod",
            "int optInSlowPeriod",
            "TA_MAType optInMAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_APO( int startIdx, int endIdx, const double inReal[], int optInFastPeriod, int optInSlowPeriod, TA_MAType optInMAType, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_APO": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInFastPeriod",
            "int optInSlowPeriod",
            "TA_MAType optInMAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_APO( int startIdx, int endIdx, const float inReal[], int optInFastPeriod, int optInSlowPeriod, TA_MAType optInMAType, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_APO_Lookback": {
        "args": [
            "int optInFastPeriod",
            "int optInSlowPeriod",
            "TA_MAType optInMAType"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_APO_Lookback( int optInFastPeriod, int optInSlowPeriod, TA_MAType optInMAType )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_AROON": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outAroonDown[]",
            "double outAroonUp[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_AROON( int startIdx, int endIdx, const double inHigh[], const double inLow[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outAroonDown[], double outAroonUp[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_AROON": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outAroonDown[]",
            "double outAroonUp[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_AROON( int startIdx, int endIdx, const float inHigh[], const float inLow[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outAroonDown[], double outAroonUp[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_AROON_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_AROON_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_AROONOSC": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_AROONOSC( int startIdx, int endIdx, const double inHigh[], const double inLow[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_AROONOSC": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_AROONOSC( int startIdx, int endIdx, const float inHigh[], const float inLow[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_AROONOSC_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_AROONOSC_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_ASIN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ASIN( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ASIN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ASIN( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ASIN_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ASIN_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_ATAN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ATAN( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ATAN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ATAN( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ATAN_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ATAN_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_ATR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ATR( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ATR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ATR( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ATR_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ATR_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_AVGPRICE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_AVGPRICE( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_AVGPRICE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_AVGPRICE( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_AVGPRICE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_AVGPRICE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_BBANDS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "double optInNbDevUp",
            "double optInNbDevDn",
            "TA_MAType optInMAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outRealUpperBand[]",
            "double outRealMiddleBand[]",
            "double outRealLowerBand[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_BBANDS( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, double optInNbDevUp, double optInNbDevDn, TA_MAType optInMAType, int *outBegIdx, int *outNBElement, double outRealUpperBand[], double outRealMiddleBand[], double outRealLowerBand[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_BBANDS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "double optInNbDevUp",
            "double optInNbDevDn",
            "TA_MAType optInMAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outRealUpperBand[]",
            "double outRealMiddleBand[]",
            "double outRealLowerBand[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_BBANDS( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, double optInNbDevUp, double optInNbDevDn, TA_MAType optInMAType, int *outBegIdx, int *outNBElement, double outRealUpperBand[], double outRealMiddleBand[], double outRealLowerBand[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_BBANDS_Lookback": {
        "args": [
            "int optInTimePeriod",
            "double optInNbDevUp",
            "double optInNbDevDn",
            "TA_MAType optInMAType"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_BBANDS_Lookback( int optInTimePeriod, double optInNbDevUp, double optInNbDevDn, TA_MAType optInMAType )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_BETA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal0[]",
            "const double inReal1[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_BETA( int startIdx, int endIdx, const double inReal0[], const double inReal1[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_BETA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal0[]",
            "const float inReal1[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_BETA( int startIdx, int endIdx, const float inReal0[], const float inReal1[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_BETA_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_BETA_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_BOP": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_BOP( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_BOP": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_BOP( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_BOP_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_BOP_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CCI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CCI( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CCI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CCI( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CCI_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CCI_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDL2CROWS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDL2CROWS( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDL2CROWS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDL2CROWS( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDL2CROWS_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDL2CROWS_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDL3BLACKCROWS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDL3BLACKCROWS( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDL3BLACKCROWS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDL3BLACKCROWS( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDL3BLACKCROWS_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDL3BLACKCROWS_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDL3INSIDE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDL3INSIDE( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDL3INSIDE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDL3INSIDE( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDL3INSIDE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDL3INSIDE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDL3LINESTRIKE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDL3LINESTRIKE( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDL3LINESTRIKE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDL3LINESTRIKE( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDL3LINESTRIKE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDL3LINESTRIKE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDL3OUTSIDE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDL3OUTSIDE( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDL3OUTSIDE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDL3OUTSIDE( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDL3OUTSIDE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDL3OUTSIDE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDL3STARSINSOUTH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDL3STARSINSOUTH( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDL3STARSINSOUTH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDL3STARSINSOUTH( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDL3STARSINSOUTH_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDL3STARSINSOUTH_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDL3WHITESOLDIERS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDL3WHITESOLDIERS( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDL3WHITESOLDIERS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDL3WHITESOLDIERS( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDL3WHITESOLDIERS_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDL3WHITESOLDIERS_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLABANDONEDBABY": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLABANDONEDBABY( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLABANDONEDBABY": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLABANDONEDBABY( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLABANDONEDBABY_Lookback": {
        "args": [
            "double optInPenetration"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLABANDONEDBABY_Lookback( double optInPenetration )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLADVANCEBLOCK": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLADVANCEBLOCK( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLADVANCEBLOCK": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLADVANCEBLOCK( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLADVANCEBLOCK_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLADVANCEBLOCK_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLBELTHOLD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLBELTHOLD( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLBELTHOLD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLBELTHOLD( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLBELTHOLD_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLBELTHOLD_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLBREAKAWAY": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLBREAKAWAY( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLBREAKAWAY": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLBREAKAWAY( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLBREAKAWAY_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLBREAKAWAY_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLCLOSINGMARUBOZU": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLCLOSINGMARUBOZU( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLCLOSINGMARUBOZU": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLCLOSINGMARUBOZU( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLCLOSINGMARUBOZU_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLCLOSINGMARUBOZU_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLCONCEALBABYSWALL": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLCONCEALBABYSWALL( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLCONCEALBABYSWALL": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLCONCEALBABYSWALL( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLCONCEALBABYSWALL_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLCONCEALBABYSWALL_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLCOUNTERATTACK": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLCOUNTERATTACK( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLCOUNTERATTACK": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLCOUNTERATTACK( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLCOUNTERATTACK_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLCOUNTERATTACK_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLDARKCLOUDCOVER": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLDARKCLOUDCOVER( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLDARKCLOUDCOVER": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLDARKCLOUDCOVER( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLDARKCLOUDCOVER_Lookback": {
        "args": [
            "double optInPenetration"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLDARKCLOUDCOVER_Lookback( double optInPenetration )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLDOJI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLDOJI( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLDOJI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLDOJI( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLDOJI_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLDOJI_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLDOJISTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLDOJISTAR( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLDOJISTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLDOJISTAR( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLDOJISTAR_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLDOJISTAR_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLDRAGONFLYDOJI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLDRAGONFLYDOJI( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLDRAGONFLYDOJI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLDRAGONFLYDOJI( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLDRAGONFLYDOJI_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLDRAGONFLYDOJI_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLENGULFING": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLENGULFING( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLENGULFING": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLENGULFING( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLENGULFING_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLENGULFING_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLEVENINGDOJISTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLEVENINGDOJISTAR( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLEVENINGDOJISTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLEVENINGDOJISTAR( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLEVENINGDOJISTAR_Lookback": {
        "args": [
            "double optInPenetration"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLEVENINGDOJISTAR_Lookback( double optInPenetration )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLEVENINGSTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLEVENINGSTAR( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLEVENINGSTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLEVENINGSTAR( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLEVENINGSTAR_Lookback": {
        "args": [
            "double optInPenetration"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLEVENINGSTAR_Lookback( double optInPenetration )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLGAPSIDESIDEWHITE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLGAPSIDESIDEWHITE( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLGAPSIDESIDEWHITE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLGAPSIDESIDEWHITE( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLGAPSIDESIDEWHITE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLGAPSIDESIDEWHITE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLGRAVESTONEDOJI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLGRAVESTONEDOJI( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLGRAVESTONEDOJI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLGRAVESTONEDOJI( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLGRAVESTONEDOJI_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLGRAVESTONEDOJI_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLHAMMER": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLHAMMER( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLHAMMER": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLHAMMER( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLHAMMER_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLHAMMER_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLHANGINGMAN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLHANGINGMAN( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLHANGINGMAN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLHANGINGMAN( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLHANGINGMAN_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLHANGINGMAN_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLHARAMI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLHARAMI( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLHARAMI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLHARAMI( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLHARAMI_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLHARAMI_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLHARAMICROSS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLHARAMICROSS( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLHARAMICROSS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLHARAMICROSS( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLHARAMICROSS_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLHARAMICROSS_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLHIGHWAVE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLHIGHWAVE( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLHIGHWAVE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLHIGHWAVE( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLHIGHWAVE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLHIGHWAVE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLHIKKAKE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLHIKKAKE( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLHIKKAKE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLHIKKAKE( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLHIKKAKE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLHIKKAKE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLHIKKAKEMOD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLHIKKAKEMOD( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLHIKKAKEMOD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLHIKKAKEMOD( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLHIKKAKEMOD_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLHIKKAKEMOD_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLHOMINGPIGEON": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLHOMINGPIGEON( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLHOMINGPIGEON": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLHOMINGPIGEON( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLHOMINGPIGEON_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLHOMINGPIGEON_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLIDENTICAL3CROWS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLIDENTICAL3CROWS( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLIDENTICAL3CROWS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLIDENTICAL3CROWS( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLIDENTICAL3CROWS_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLIDENTICAL3CROWS_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLINNECK": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLINNECK( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLINNECK": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLINNECK( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLINNECK_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLINNECK_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLINVERTEDHAMMER": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLINVERTEDHAMMER( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLINVERTEDHAMMER": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLINVERTEDHAMMER( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLINVERTEDHAMMER_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLINVERTEDHAMMER_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLKICKING": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLKICKING( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLKICKING": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLKICKING( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLKICKING_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLKICKING_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLKICKINGBYLENGTH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLKICKINGBYLENGTH( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLKICKINGBYLENGTH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLKICKINGBYLENGTH( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLKICKINGBYLENGTH_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLKICKINGBYLENGTH_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLLADDERBOTTOM": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLLADDERBOTTOM( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLLADDERBOTTOM": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLLADDERBOTTOM( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLLADDERBOTTOM_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLLADDERBOTTOM_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLLONGLEGGEDDOJI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLLONGLEGGEDDOJI( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLLONGLEGGEDDOJI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLLONGLEGGEDDOJI( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLLONGLEGGEDDOJI_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLLONGLEGGEDDOJI_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLLONGLINE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLLONGLINE( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLLONGLINE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLLONGLINE( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLLONGLINE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLLONGLINE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLMARUBOZU": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLMARUBOZU( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLMARUBOZU": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLMARUBOZU( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLMARUBOZU_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLMARUBOZU_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLMATCHINGLOW": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLMATCHINGLOW( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLMATCHINGLOW": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLMATCHINGLOW( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLMATCHINGLOW_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLMATCHINGLOW_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLMATHOLD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLMATHOLD( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLMATHOLD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLMATHOLD( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLMATHOLD_Lookback": {
        "args": [
            "double optInPenetration"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLMATHOLD_Lookback( double optInPenetration )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLMORNINGDOJISTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLMORNINGDOJISTAR( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLMORNINGDOJISTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLMORNINGDOJISTAR( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLMORNINGDOJISTAR_Lookback": {
        "args": [
            "double optInPenetration"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLMORNINGDOJISTAR_Lookback( double optInPenetration )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLMORNINGSTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLMORNINGSTAR( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLMORNINGSTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "double optInPenetration",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLMORNINGSTAR( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], double optInPenetration, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLMORNINGSTAR_Lookback": {
        "args": [
            "double optInPenetration"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLMORNINGSTAR_Lookback( double optInPenetration )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLONNECK": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLONNECK( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLONNECK": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLONNECK( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLONNECK_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLONNECK_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLPIERCING": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLPIERCING( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLPIERCING": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLPIERCING( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLPIERCING_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLPIERCING_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLRICKSHAWMAN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLRICKSHAWMAN( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLRICKSHAWMAN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLRICKSHAWMAN( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLRICKSHAWMAN_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLRICKSHAWMAN_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLRISEFALL3METHODS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLRISEFALL3METHODS( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLRISEFALL3METHODS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLRISEFALL3METHODS( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLRISEFALL3METHODS_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLRISEFALL3METHODS_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLSEPARATINGLINES": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLSEPARATINGLINES( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLSEPARATINGLINES": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLSEPARATINGLINES( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLSEPARATINGLINES_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLSEPARATINGLINES_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLSHOOTINGSTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLSHOOTINGSTAR( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLSHOOTINGSTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLSHOOTINGSTAR( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLSHOOTINGSTAR_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLSHOOTINGSTAR_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLSHORTLINE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLSHORTLINE( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLSHORTLINE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLSHORTLINE( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLSHORTLINE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLSHORTLINE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLSPINNINGTOP": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLSPINNINGTOP( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLSPINNINGTOP": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLSPINNINGTOP( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLSPINNINGTOP_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLSPINNINGTOP_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLSTALLEDPATTERN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLSTALLEDPATTERN( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLSTALLEDPATTERN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLSTALLEDPATTERN( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLSTALLEDPATTERN_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLSTALLEDPATTERN_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLSTICKSANDWICH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLSTICKSANDWICH( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLSTICKSANDWICH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLSTICKSANDWICH( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLSTICKSANDWICH_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLSTICKSANDWICH_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLTAKURI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLTAKURI( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLTAKURI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLTAKURI( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLTAKURI_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLTAKURI_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLTASUKIGAP": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLTASUKIGAP( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLTASUKIGAP": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLTASUKIGAP( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLTASUKIGAP_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLTASUKIGAP_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLTHRUSTING": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLTHRUSTING( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLTHRUSTING": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLTHRUSTING( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLTHRUSTING_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLTHRUSTING_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLTRISTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLTRISTAR( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLTRISTAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLTRISTAR( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLTRISTAR_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLTRISTAR_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLUNIQUE3RIVER": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLUNIQUE3RIVER( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLUNIQUE3RIVER": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLUNIQUE3RIVER( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLUNIQUE3RIVER_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLUNIQUE3RIVER_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLUPSIDEGAP2CROWS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLUPSIDEGAP2CROWS( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLUPSIDEGAP2CROWS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLUPSIDEGAP2CROWS( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLUPSIDEGAP2CROWS_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLUPSIDEGAP2CROWS_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CDLXSIDEGAP3METHODS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inOpen[]",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CDLXSIDEGAP3METHODS( int startIdx, int endIdx, const double inOpen[], const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CDLXSIDEGAP3METHODS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inOpen[]",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CDLXSIDEGAP3METHODS( int startIdx, int endIdx, const float inOpen[], const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CDLXSIDEGAP3METHODS_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CDLXSIDEGAP3METHODS_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CEIL": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CEIL( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CEIL": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CEIL( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CEIL_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CEIL_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CMO": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CMO( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CMO": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CMO( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CMO_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CMO_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_CORREL": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal0[]",
            "const double inReal1[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_CORREL( int startIdx, int endIdx, const double inReal0[], const double inReal1[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_CORREL": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal0[]",
            "const float inReal1[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_CORREL( int startIdx, int endIdx, const float inReal0[], const float inReal1[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_CORREL_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_CORREL_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_COS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_COS( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_COS": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_COS( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_COS_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_COS_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_COSH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_COSH( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_COSH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_COSH( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_COSH_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_COSH_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_DEMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_DEMA( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_DEMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_DEMA( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_DEMA_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_DEMA_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_DIV": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal0[]",
            "const double inReal1[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_DIV( int startIdx, int endIdx, const double inReal0[], const double inReal1[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_DIV": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal0[]",
            "const float inReal1[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_DIV( int startIdx, int endIdx, const float inReal0[], const float inReal1[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_DIV_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_DIV_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_DX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_DX( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_DX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_DX( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_DX_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_DX_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_EMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_EMA( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_EMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_EMA( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_EMA_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_EMA_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_EXP": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_EXP( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_EXP": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_EXP( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_EXP_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_EXP_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_FLOOR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_FLOOR( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_FLOOR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_FLOOR( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_FLOOR_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_FLOOR_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_HT_DCPERIOD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_HT_DCPERIOD( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_HT_DCPERIOD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_HT_DCPERIOD( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_HT_DCPERIOD_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_HT_DCPERIOD_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_HT_DCPHASE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_HT_DCPHASE( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_HT_DCPHASE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_HT_DCPHASE( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_HT_DCPHASE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_HT_DCPHASE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_HT_PHASOR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outInPhase[]",
            "double outQuadrature[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_HT_PHASOR( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outInPhase[], double outQuadrature[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_HT_PHASOR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outInPhase[]",
            "double outQuadrature[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_HT_PHASOR( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outInPhase[], double outQuadrature[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_HT_PHASOR_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_HT_PHASOR_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_HT_SINE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outSine[]",
            "double outLeadSine[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_HT_SINE( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outSine[], double outLeadSine[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_HT_SINE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outSine[]",
            "double outLeadSine[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_HT_SINE( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outSine[], double outLeadSine[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_HT_SINE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_HT_SINE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_HT_TRENDLINE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_HT_TRENDLINE( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_HT_TRENDLINE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_HT_TRENDLINE( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_HT_TRENDLINE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_HT_TRENDLINE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_HT_TRENDMODE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_HT_TRENDMODE( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_HT_TRENDMODE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_HT_TRENDMODE( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_HT_TRENDMODE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_HT_TRENDMODE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_KAMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_KAMA( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_KAMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_KAMA( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_KAMA_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_KAMA_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_LINEARREG": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_LINEARREG( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_LINEARREG": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_LINEARREG( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_LINEARREG_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_LINEARREG_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_LINEARREG_ANGLE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_LINEARREG_ANGLE( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_LINEARREG_ANGLE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_LINEARREG_ANGLE( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_LINEARREG_ANGLE_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_LINEARREG_ANGLE_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_LINEARREG_INTERCEPT": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_LINEARREG_INTERCEPT( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_LINEARREG_INTERCEPT": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_LINEARREG_INTERCEPT( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_LINEARREG_INTERCEPT_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_LINEARREG_INTERCEPT_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_LINEARREG_SLOPE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_LINEARREG_SLOPE( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_LINEARREG_SLOPE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_LINEARREG_SLOPE( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_LINEARREG_SLOPE_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_LINEARREG_SLOPE_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_LN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_LN( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_LN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_LN( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_LN_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_LN_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_LOG10": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_LOG10( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_LOG10": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_LOG10( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_LOG10_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_LOG10_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "TA_MAType optInMAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MA( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, TA_MAType optInMAType, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "TA_MAType optInMAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MA( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, TA_MAType optInMAType, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MA_Lookback": {
        "args": [
            "int optInTimePeriod",
            "TA_MAType optInMAType"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MA_Lookback( int optInTimePeriod, TA_MAType optInMAType )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MACD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInFastPeriod",
            "int optInSlowPeriod",
            "int optInSignalPeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outMACD[]",
            "double outMACDSignal[]",
            "double outMACDHist[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MACD( int startIdx, int endIdx, const double inReal[], int optInFastPeriod, int optInSlowPeriod, int optInSignalPeriod, int *outBegIdx, int *outNBElement, double outMACD[], double outMACDSignal[], double outMACDHist[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MACD": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInFastPeriod",
            "int optInSlowPeriod",
            "int optInSignalPeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outMACD[]",
            "double outMACDSignal[]",
            "double outMACDHist[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MACD( int startIdx, int endIdx, const float inReal[], int optInFastPeriod, int optInSlowPeriod, int optInSignalPeriod, int *outBegIdx, int *outNBElement, double outMACD[], double outMACDSignal[], double outMACDHist[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MACD_Lookback": {
        "args": [
            "int optInFastPeriod",
            "int optInSlowPeriod",
            "int optInSignalPeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MACD_Lookback( int optInFastPeriod, int optInSlowPeriod, int optInSignalPeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MACDEXT": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInFastPeriod",
            "TA_MAType optInFastMAType",
            "int optInSlowPeriod",
            "TA_MAType optInSlowMAType",
            "int optInSignalPeriod",
            "TA_MAType optInSignalMAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outMACD[]",
            "double outMACDSignal[]",
            "double outMACDHist[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MACDEXT( int startIdx, int endIdx, const double inReal[], int optInFastPeriod, TA_MAType optInFastMAType, int optInSlowPeriod, TA_MAType optInSlowMAType, int optInSignalPeriod, TA_MAType optInSignalMAType, int *outBegIdx, int *outNBElement, double outMACD[], double outMACDSignal[], double outMACDHist[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MACDEXT": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInFastPeriod",
            "TA_MAType optInFastMAType",
            "int optInSlowPeriod",
            "TA_MAType optInSlowMAType",
            "int optInSignalPeriod",
            "TA_MAType optInSignalMAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outMACD[]",
            "double outMACDSignal[]",
            "double outMACDHist[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MACDEXT( int startIdx, int endIdx, const float inReal[], int optInFastPeriod, TA_MAType optInFastMAType, int optInSlowPeriod, TA_MAType optInSlowMAType, int optInSignalPeriod, TA_MAType optInSignalMAType, int *outBegIdx, int *outNBElement, double outMACD[], double outMACDSignal[], double outMACDHist[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MACDEXT_Lookback": {
        "args": [
            "int optInFastPeriod",
            "TA_MAType optInFastMAType",
            "int optInSlowPeriod",
            "TA_MAType optInSlowMAType",
            "int optInSignalPeriod",
            "TA_MAType optInSignalMAType"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MACDEXT_Lookback( int optInFastPeriod, TA_MAType optInFastMAType, int optInSlowPeriod, TA_MAType optInSlowMAType, int optInSignalPeriod, TA_MAType optInSignalMAType )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MACDFIX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInSignalPeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outMACD[]",
            "double outMACDSignal[]",
            "double outMACDHist[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MACDFIX( int startIdx, int endIdx, const double inReal[], int optInSignalPeriod, int *outBegIdx, int *outNBElement, double outMACD[], double outMACDSignal[], double outMACDHist[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MACDFIX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInSignalPeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outMACD[]",
            "double outMACDSignal[]",
            "double outMACDHist[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MACDFIX( int startIdx, int endIdx, const float inReal[], int optInSignalPeriod, int *outBegIdx, int *outNBElement, double outMACD[], double outMACDSignal[], double outMACDHist[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MACDFIX_Lookback": {
        "args": [
            "int optInSignalPeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MACDFIX_Lookback( int optInSignalPeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MAMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "double optInFastLimit",
            "double optInSlowLimit",
            "int *outBegIdx",
            "int *outNBElement",
            "double outMAMA[]",
            "double outFAMA[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MAMA( int startIdx, int endIdx, const double inReal[], double optInFastLimit, double optInSlowLimit, int *outBegIdx, int *outNBElement, double outMAMA[], double outFAMA[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MAMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "double optInFastLimit",
            "double optInSlowLimit",
            "int *outBegIdx",
            "int *outNBElement",
            "double outMAMA[]",
            "double outFAMA[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MAMA( int startIdx, int endIdx, const float inReal[], double optInFastLimit, double optInSlowLimit, int *outBegIdx, int *outNBElement, double outMAMA[], double outFAMA[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MAMA_Lookback": {
        "args": [
            "double optInFastLimit",
            "double optInSlowLimit"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MAMA_Lookback( double optInFastLimit, double optInSlowLimit )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MAVP": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "const double inPeriods[]",
            "int optInMinPeriod",
            "int optInMaxPeriod",
            "TA_MAType optInMAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MAVP( int startIdx, int endIdx, const double inReal[], const double inPeriods[], int optInMinPeriod, int optInMaxPeriod, TA_MAType optInMAType, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MAVP": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "const float inPeriods[]",
            "int optInMinPeriod",
            "int optInMaxPeriod",
            "TA_MAType optInMAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MAVP( int startIdx, int endIdx, const float inReal[], const float inPeriods[], int optInMinPeriod, int optInMaxPeriod, TA_MAType optInMAType, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MAVP_Lookback": {
        "args": [
            "int optInMinPeriod",
            "int optInMaxPeriod",
            "TA_MAType optInMAType"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MAVP_Lookback( int optInMinPeriod, int optInMaxPeriod, TA_MAType optInMAType )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MAX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MAX( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MAX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MAX( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MAX_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MAX_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MAXINDEX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MAXINDEX( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MAXINDEX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MAXINDEX( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MAXINDEX_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MAXINDEX_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MEDPRICE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MEDPRICE( int startIdx, int endIdx, const double inHigh[], const double inLow[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MEDPRICE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MEDPRICE( int startIdx, int endIdx, const float inHigh[], const float inLow[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MEDPRICE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MEDPRICE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MFI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "const double inVolume[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MFI( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], const double inVolume[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MFI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "const float inVolume[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MFI( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], const float inVolume[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MFI_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MFI_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MIDPOINT": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MIDPOINT( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MIDPOINT": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MIDPOINT( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MIDPOINT_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MIDPOINT_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MIDPRICE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MIDPRICE( int startIdx, int endIdx, const double inHigh[], const double inLow[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MIDPRICE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MIDPRICE( int startIdx, int endIdx, const float inHigh[], const float inLow[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MIDPRICE_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MIDPRICE_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MIN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MIN( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MIN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MIN( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MIN_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MIN_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MININDEX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MININDEX( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MININDEX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "int outInteger[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MININDEX( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, int outInteger[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MININDEX_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MININDEX_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MINMAX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outMin[]",
            "double outMax[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MINMAX( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outMin[], double outMax[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MINMAX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outMin[]",
            "double outMax[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MINMAX( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outMin[], double outMax[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MINMAX_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MINMAX_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MINMAXINDEX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "int outMinIdx[]",
            "int outMaxIdx[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MINMAXINDEX( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, int outMinIdx[], int outMaxIdx[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MINMAXINDEX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "int outMinIdx[]",
            "int outMaxIdx[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MINMAXINDEX( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, int outMinIdx[], int outMaxIdx[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MINMAXINDEX_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MINMAXINDEX_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MINUS_DI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MINUS_DI( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MINUS_DI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MINUS_DI( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MINUS_DI_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MINUS_DI_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MINUS_DM": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MINUS_DM( int startIdx, int endIdx, const double inHigh[], const double inLow[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MINUS_DM": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MINUS_DM( int startIdx, int endIdx, const float inHigh[], const float inLow[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MINUS_DM_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MINUS_DM_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MOM": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MOM( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MOM": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MOM( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MOM_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MOM_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_MULT": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal0[]",
            "const double inReal1[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_MULT( int startIdx, int endIdx, const double inReal0[], const double inReal1[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_MULT": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal0[]",
            "const float inReal1[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_MULT( int startIdx, int endIdx, const float inReal0[], const float inReal1[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_MULT_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_MULT_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_NATR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_NATR( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_NATR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_NATR( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_NATR_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_NATR_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_OBV": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "const double inVolume[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_OBV( int startIdx, int endIdx, const double inReal[], const double inVolume[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_OBV": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "const float inVolume[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_OBV( int startIdx, int endIdx, const float inReal[], const float inVolume[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_OBV_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_OBV_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_PLUS_DI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_PLUS_DI( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_PLUS_DI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_PLUS_DI( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_PLUS_DI_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_PLUS_DI_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_PLUS_DM": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_PLUS_DM( int startIdx, int endIdx, const double inHigh[], const double inLow[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_PLUS_DM": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_PLUS_DM( int startIdx, int endIdx, const float inHigh[], const float inLow[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_PLUS_DM_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_PLUS_DM_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_PPO": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInFastPeriod",
            "int optInSlowPeriod",
            "TA_MAType optInMAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_PPO( int startIdx, int endIdx, const double inReal[], int optInFastPeriod, int optInSlowPeriod, TA_MAType optInMAType, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_PPO": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInFastPeriod",
            "int optInSlowPeriod",
            "TA_MAType optInMAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_PPO( int startIdx, int endIdx, const float inReal[], int optInFastPeriod, int optInSlowPeriod, TA_MAType optInMAType, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_PPO_Lookback": {
        "args": [
            "int optInFastPeriod",
            "int optInSlowPeriod",
            "TA_MAType optInMAType"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_PPO_Lookback( int optInFastPeriod, int optInSlowPeriod, TA_MAType optInMAType )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_ROC": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ROC( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ROC": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ROC( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ROC_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ROC_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_ROCP": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ROCP( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ROCP": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ROCP( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ROCP_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ROCP_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_ROCR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ROCR( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ROCR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ROCR( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ROCR_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ROCR_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_ROCR100": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ROCR100( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ROCR100": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ROCR100( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ROCR100_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ROCR100_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_RSI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_RSI( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_RSI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_RSI( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_RSI_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_RSI_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_SAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "double optInAcceleration",
            "double optInMaximum",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_SAR( int startIdx, int endIdx, const double inHigh[], const double inLow[], double optInAcceleration, double optInMaximum, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_SAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "double optInAcceleration",
            "double optInMaximum",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_SAR( int startIdx, int endIdx, const float inHigh[], const float inLow[], double optInAcceleration, double optInMaximum, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_SAR_Lookback": {
        "args": [
            "double optInAcceleration",
            "double optInMaximum"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_SAR_Lookback( double optInAcceleration, double optInMaximum )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_SAREXT": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "double optInStartValue",
            "double optInOffsetOnReverse",
            "double optInAccelerationInitLong",
            "double optInAccelerationLong",
            "double optInAccelerationMaxLong",
            "double optInAccelerationInitShort",
            "double optInAccelerationShort",
            "double optInAccelerationMaxShort",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_SAREXT( int startIdx, int endIdx, const double inHigh[], const double inLow[], double optInStartValue, double optInOffsetOnReverse, double optInAccelerationInitLong, double optInAccelerationLong, double optInAccelerationMaxLong, double optInAccelerationInitShort, double optInAccelerationShort, double optInAccelerationMaxShort, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_SAREXT": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "double optInStartValue",
            "double optInOffsetOnReverse",
            "double optInAccelerationInitLong",
            "double optInAccelerationLong",
            "double optInAccelerationMaxLong",
            "double optInAccelerationInitShort",
            "double optInAccelerationShort",
            "double optInAccelerationMaxShort",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_SAREXT( int startIdx, int endIdx, const float inHigh[], const float inLow[], double optInStartValue, double optInOffsetOnReverse, double optInAccelerationInitLong, double optInAccelerationLong, double optInAccelerationMaxLong, double optInAccelerationInitShort, double optInAccelerationShort, double optInAccelerationMaxShort, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_SAREXT_Lookback": {
        "args": [
            "double optInStartValue",
            "double optInOffsetOnReverse",
            "double optInAccelerationInitLong",
            "double optInAccelerationLong",
            "double optInAccelerationMaxLong",
            "double optInAccelerationInitShort",
            "double optInAccelerationShort",
            "double optInAccelerationMaxShort"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_SAREXT_Lookback( double optInStartValue, double optInOffsetOnReverse, double optInAccelerationInitLong, double optInAccelerationLong, double optInAccelerationMaxLong, double optInAccelerationInitShort, double optInAccelerationShort, double optInAccelerationMaxShort )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_SIN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_SIN( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_SIN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_SIN( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_SIN_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_SIN_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_SINH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_SINH( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_SINH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_SINH( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_SINH_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_SINH_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_SMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_SMA( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_SMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_SMA( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_SMA_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_SMA_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_SQRT": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_SQRT( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_SQRT": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_SQRT( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_SQRT_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_SQRT_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_STDDEV": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "double optInNbDev",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_STDDEV( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, double optInNbDev, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_STDDEV": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "double optInNbDev",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_STDDEV( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, double optInNbDev, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_STDDEV_Lookback": {
        "args": [
            "int optInTimePeriod",
            "double optInNbDev"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_STDDEV_Lookback( int optInTimePeriod, double optInNbDev )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_STOCH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int optInFastK_Period",
            "int optInSlowK_Period",
            "TA_MAType optInSlowK_MAType",
            "int optInSlowD_Period",
            "TA_MAType optInSlowD_MAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outSlowK[]",
            "double outSlowD[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_STOCH( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int optInFastK_Period, int optInSlowK_Period, TA_MAType optInSlowK_MAType, int optInSlowD_Period, TA_MAType optInSlowD_MAType, int *outBegIdx, int *outNBElement, double outSlowK[], double outSlowD[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_STOCH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int optInFastK_Period",
            "int optInSlowK_Period",
            "TA_MAType optInSlowK_MAType",
            "int optInSlowD_Period",
            "TA_MAType optInSlowD_MAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outSlowK[]",
            "double outSlowD[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_STOCH( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int optInFastK_Period, int optInSlowK_Period, TA_MAType optInSlowK_MAType, int optInSlowD_Period, TA_MAType optInSlowD_MAType, int *outBegIdx, int *outNBElement, double outSlowK[], double outSlowD[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_STOCH_Lookback": {
        "args": [
            "int optInFastK_Period",
            "int optInSlowK_Period",
            "TA_MAType optInSlowK_MAType",
            "int optInSlowD_Period",
            "TA_MAType optInSlowD_MAType"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_STOCH_Lookback( int optInFastK_Period, int optInSlowK_Period, TA_MAType optInSlowK_MAType, int optInSlowD_Period, TA_MAType optInSlowD_MAType )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_STOCHF": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int optInFastK_Period",
            "int optInFastD_Period",
            "TA_MAType optInFastD_MAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outFastK[]",
            "double outFastD[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_STOCHF( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int optInFastK_Period, int optInFastD_Period, TA_MAType optInFastD_MAType, int *outBegIdx, int *outNBElement, double outFastK[], double outFastD[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_STOCHF": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int optInFastK_Period",
            "int optInFastD_Period",
            "TA_MAType optInFastD_MAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outFastK[]",
            "double outFastD[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_STOCHF( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int optInFastK_Period, int optInFastD_Period, TA_MAType optInFastD_MAType, int *outBegIdx, int *outNBElement, double outFastK[], double outFastD[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_STOCHF_Lookback": {
        "args": [
            "int optInFastK_Period",
            "int optInFastD_Period",
            "TA_MAType optInFastD_MAType"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_STOCHF_Lookback( int optInFastK_Period, int optInFastD_Period, TA_MAType optInFastD_MAType )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_STOCHRSI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int optInFastK_Period",
            "int optInFastD_Period",
            "TA_MAType optInFastD_MAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outFastK[]",
            "double outFastD[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_STOCHRSI( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int optInFastK_Period, int optInFastD_Period, TA_MAType optInFastD_MAType, int *outBegIdx, int *outNBElement, double outFastK[], double outFastD[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_STOCHRSI": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int optInFastK_Period",
            "int optInFastD_Period",
            "TA_MAType optInFastD_MAType",
            "int *outBegIdx",
            "int *outNBElement",
            "double outFastK[]",
            "double outFastD[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_STOCHRSI( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int optInFastK_Period, int optInFastD_Period, TA_MAType optInFastD_MAType, int *outBegIdx, int *outNBElement, double outFastK[], double outFastD[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_STOCHRSI_Lookback": {
        "args": [
            "int optInTimePeriod",
            "int optInFastK_Period",
            "int optInFastD_Period",
            "TA_MAType optInFastD_MAType"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_STOCHRSI_Lookback( int optInTimePeriod, int optInFastK_Period, int optInFastD_Period, TA_MAType optInFastD_MAType )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_SUB": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal0[]",
            "const double inReal1[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_SUB( int startIdx, int endIdx, const double inReal0[], const double inReal1[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_SUB": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal0[]",
            "const float inReal1[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_SUB( int startIdx, int endIdx, const float inReal0[], const float inReal1[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_SUB_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_SUB_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_SUM": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_SUM( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_SUM": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_SUM( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_SUM_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_SUM_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_T3": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "double optInVFactor",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_T3( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, double optInVFactor, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_T3": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "double optInVFactor",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_T3( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, double optInVFactor, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_T3_Lookback": {
        "args": [
            "int optInTimePeriod",
            "double optInVFactor"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_T3_Lookback( int optInTimePeriod, double optInVFactor )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_TAN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_TAN( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_TAN": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_TAN( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_TAN_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_TAN_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_TANH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_TANH( int startIdx, int endIdx, const double inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_TANH": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_TANH( int startIdx, int endIdx, const float inReal[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_TANH_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_TANH_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_TEMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_TEMA( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_TEMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_TEMA( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_TEMA_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_TEMA_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_TRANGE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_TRANGE( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_TRANGE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_TRANGE( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_TRANGE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_TRANGE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_TRIMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_TRIMA( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_TRIMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_TRIMA( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_TRIMA_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_TRIMA_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_TRIX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_TRIX( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_TRIX": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_TRIX( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_TRIX_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_TRIX_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_TSF": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_TSF( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_TSF": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_TSF( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_TSF_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_TSF_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_TYPPRICE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_TYPPRICE( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_TYPPRICE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_TYPPRICE( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_TYPPRICE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_TYPPRICE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_ULTOSC": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int optInTimePeriod1",
            "int optInTimePeriod2",
            "int optInTimePeriod3",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_ULTOSC( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int optInTimePeriod1, int optInTimePeriod2, int optInTimePeriod3, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_ULTOSC": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int optInTimePeriod1",
            "int optInTimePeriod2",
            "int optInTimePeriod3",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_ULTOSC( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int optInTimePeriod1, int optInTimePeriod2, int optInTimePeriod3, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_ULTOSC_Lookback": {
        "args": [
            "int optInTimePeriod1",
            "int optInTimePeriod2",
            "int optInTimePeriod3"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_ULTOSC_Lookback( int optInTimePeriod1, int optInTimePeriod2, int optInTimePeriod3 )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_VAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "double optInNbDev",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_VAR( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, double optInNbDev, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_VAR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "double optInNbDev",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_VAR( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, double optInNbDev, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_VAR_Lookback": {
        "args": [
            "int optInTimePeriod",
            "double optInNbDev"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_VAR_Lookback( int optInTimePeriod, double optInNbDev )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_WCLPRICE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_WCLPRICE( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_WCLPRICE": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_WCLPRICE( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_WCLPRICE_Lookback": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_WCLPRICE_Lookback( void )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_WILLR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inHigh[]",
            "const double inLow[]",
            "const double inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_WILLR( int startIdx, int endIdx, const double inHigh[], const double inLow[], const double inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_WILLR": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inHigh[]",
            "const float inLow[]",
            "const float inClose[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_WILLR( int startIdx, int endIdx, const float inHigh[], const float inLow[], const float inClose[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_WILLR_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_WILLR_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_WMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const double inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_WMA( int startIdx, int endIdx, const double inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_S_WMA": {
        "args": [
            "int startIdx",
            "int endIdx",
            "const float inReal[]",
            "int optInTimePeriod",
            "int *outBegIdx",
            "int *outNBElement",
            "double outReal[]"
        ],
        "is_float": true,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_S_WMA( int startIdx, int endIdx, const float inReal[], int optInTimePeriod, int *outBegIdx, int *outNBElement, double outReal[] )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_WMA_Lookback": {
        "args": [
            "int optInTimePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "int",
        "prototype": "int TA_WMA_Lookback( int optInTimePeriod )",
        "is_lookback": true,
        "is_indicator": true
    },
    "TA_SetUnstablePeriod": {
        "args": [
            "TA_FuncUnstId id",
            "unsigned int unstablePeriod"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_SetUnstablePeriod( TA_FuncUnstId id, unsigned int unstablePeriod )",
        "is_lookback": false,
        "is_indicator": false
    },
    "TA_SetCompatibility": {
        "args": [
            "TA_Compatibility value"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_SetCompatibility( TA_Compatibility value )",
        "is_lookback": false,
        "is_indicator": false
    },
    "TA_GetCompatibility": {
        "args": [
            "void"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_Compatibility",
        "prototype": "TA_Compatibility TA_GetCompatibility( void )",
        "is_lookback": false,
        "is_indicator": true
    },
    "TA_SetCandleSettings": {
        "args": [
            "TA_CandleSettingType settingType",
            "TA_RangeType rangeType",
            "int avgPeriod",
            "double factor"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_SetCandleSettings( TA_CandleSettingType settingType, TA_RangeType rangeType, int avgPeriod, double factor )",
        "is_lookback": false,
        "is_indicator": false
    },
    "TA_RestoreCandleDefaultSettings": {
        "args": [
            "TA_CandleSettingType settingType"
        ],
        "is_float": false,
        "info": {},
        "ret_typ": "TA_RetCode",
        "prototype": "TA_RetCode TA_RestoreCandleDefaultSettings( TA_CandleSettingType settingType )",
        "is_lookback": false,
        "is_indicator": false
    }
}